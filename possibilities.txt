++++++++++++++++++++++++++++++++++++++++++++++++
0 = 15
1 = 14
2 = 13
3 = 3
4 = 11
5 = 5
6 = 6
7 = 1
8 = 7
9 = 9
10 = 10
11 = 2
12 = 12
13 = 4
14 = 8
15 = 0





if 2 cells are alive then no change

1100
0101
0011
1010
1001
0110

--------------------
12 = 12
5 = 5
3 = 3
10 = 10
9 = 9
6 = 6
--------------------


if 0, 1 or 4 are alive then flip all states
0000 = 1111

1000 = 0111
0100 = 1011
0010 = 1101
0001 = 1110

1111 = 0000
1, 1, 1, 1, 1, 1, 0, 0], 
[1, 1, 1, 0, 0, 1, 1, 1], 
[1, 0, 0, 1, 0, 1, 0, 0], 
[1, 1, 0, 1, 1, 0, 0, 1], 
[0, 1, 1, 0, 1, 0, 0, 0], 
[1, 1, 0, 1, 1, 0, 1, 0], 
[1, 1, 0, 1, 1, 0, 0, 0], 
[0, 0, 0, 0, 0, 0, 0, 0]
---------------------
0 = 15
8 = 7
4 = 11
2 = 13
1 = 14
15 = 0
---------------------



if exactly 3 are alive, then flip and 180 rotate
1110 = 1000
1101 = 0100
0111 = 0001
1011 = 0010

----------------------------
14 = 8
13 = 4
7 = 1
11 = 2
-------------------------------




we take a string
'abcd'

we somehow convert it to 8*8 binary array

[0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 1, 1, 0, 1, 1],
[0, 1, 0, 1, 0, 1, 0, 1],
[0, 0, 0, 1, 1, 0, 1, 1],
[1, 0, 1, 0, 1, 0, 1, 0],
[0, 0, 0, 1, 1, 0, 1, 1],
[1, 1, 1, 1, 1, 1, 1, 1],
[0, 0, 0, 1, 1, 0, 1, 1]

consider blue grid
[0, 1, 2, 3], 
[4, 5, 6, 7], 
[8, 9, 10, 11], 
[12, 13, 14, 15]

write a function that takes in bluegrid and returns transformed bluegrid. 

transformed blue grid
[15,14,13,3],
[11,5,6,1],
[7,9,10,2],
[12,4,8,0]

convert back the transformed bluegrid to display grid

[1, 1, 1, 1, 1, 1, 0, 0], 
[1, 1, 1, 0, 0, 1, 1, 1], 
[1, 0, 0, 1, 0, 1, 0, 0], 
[1, 1, 0, 1, 1, 0, 0, 1], 
[0, 1, 1, 0, 1, 0, 0, 0], 
[1, 1, 0, 1, 1, 0, 1, 0], 
[1, 1, 0, 1, 1, 0, 0, 0], 
[0, 0, 0, 0, 0, 0, 0, 0]

convert display grid to redgrid format

[1, 3, 3, 2], 
[13, 12, 2, 14], 
[12, 11, 13, 0], 
[5, 10, 15, 4]

now transform redgrid
[14, 3, 3, 13], 
[4, 12, 13, 8], 
[12, 2, 4, 15], 
[5, 10, 0, 11]


convert transformed redgrid to display grid
[0, 1, 1, 1, 1, 0, 1, 1], 
[1, 1, 1, 1, 1, 1, 0, 0], 
[0, 0, 0, 0, 1, 0, 0, 0], 
[1, 0, 0, 0, 1, 1, 1, 1], 
[0, 1, 0, 0, 0, 1, 1, 0], 
[1, 1, 0, 0, 0, 1, 0, 0], 
[1, 1, 0, 0, 0, 1, 1, 0], 
[1, 0, 0, 0, 0, 1, 1, 1]

